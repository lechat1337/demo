/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package demo.exec;

import java.io.*;
import java.math.BigDecimal;
import java.util.Locale;
import java.util.Scanner; // Import the Scanner class to read text files

import demo.model.*;

public class ConsoleRunner {
    public static FacilityLocationProblem getProblem(File file) {
        FacilityLocationProblem problem = new FacilityLocationProblem();
        Facility tmpFac = new Facility();
        Customer tmpCus = new Customer();
        int nClients = 0;
        int nWarehouses = 0;
        
        try {
            Scanner sc = new Scanner(file).useLocale(Locale.US);
            nWarehouses = sc.nextInt();
            nClients = sc.nextInt();
            for(int i=0; i < nWarehouses; i++){
                tmpFac = new Facility(i,
                        BigDecimal.valueOf(sc.nextDouble()),
                        BigDecimal.valueOf(sc.nextDouble()),
                new Location(sc.nextDouble(), sc.nextDouble()));
                //System.out.println(tmpFac.toStirng());
                problem.addFacility(tmpFac);
            }

            for(int i=0; i < nClients; i++){
                problem.addCustomer(new Customer(i,
                                                 BigDecimal.valueOf(sc.nextDouble()),
                                                 new Location(sc.nextDouble(), sc.nextDouble())));     
            }
            sc.close();
        } catch (FileNotFoundException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
        Matrix.adjustMatrix();
        Matrix.calculate();
        return problem;
    }

    public static void main(String[] args) throws IOException {

        FacilityLocationProblem problem = ConsoleRunner.getProblem(new File("C:\\Users\\aleksejs\\coursera\\facility\\data\\fl_2000_2"));

        FacilityLocationProblem solution = ProblemSolver.solve(problem);
        StringBuilder res = new StringBuilder();
        res.append(FPLScoreCalculator.calculateScore(solution)).append(" 0\n");
        for (Customer c : solution.getCustomers()){
            res.append(c.getFacility().getId()).append(" ");
        }
        BufferedWriter writer = new BufferedWriter(new FileWriter("C:\\Users\\aleksejs\\coursera\\facility\\solution_file.txt", false));
        writer.write(res.toString());
        writer.close();
    }
}
